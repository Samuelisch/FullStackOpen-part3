{"version":3,"sources":["components/filter.js","components/person.js","components/personform.js","components/server.js","components/notifications.js","App.js","index.js"],"names":["Filter","searchChange","onChange","Person","name","number","toggleDelete","type","onClick","PersonForm","nameChange","numChange","btnClick","baseUrl","toBeExported","getAll","axios","get","then","response","data","create","newObject","post","update","id","newObj","put","deletePerson","delete","Notification","notif","console","log","text","className","App","useState","persons","setPersons","newSearch","setSearch","newName","setNewName","newNum","setNewNum","showAll","setShowAll","notifMsg","setNotifMsg","useEffect","server","initialContacts","setNotifMsgInfo","setTimeout","toShow","filter","person","toLowerCase","includes","e","target","value","preventDefault","existingId","existingPersons","find","checkDuplicate","window","confirm","returnedPerson","map","updateNum","concat","returnedContact","personToDelete","deletedContact","catch","error","toggleDeletePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c88a6178.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({searchChange}) => {\n  return (\n    <div>\n      filter shown with <input onChange={searchChange} />\n    </div>\n  )\n}\n\nexport default Filter;","import React from 'react'\n\nconst Person = ({name, number, toggleDelete}) => {\n  return (\n    <div>\n      {name} {number}\n      <button type=\"button\" onClick={toggleDelete}>Delete</button>\n    </div>\n  )\n}\n\nexport default Person;","import React from 'react'\n\nconst PersonForm = ({nameChange, numChange, btnClick}) => {\n  return (\n    <form>\n      <div>\n          name: <input onChange={nameChange} />\n        </div>\n        <div>\n          number: <input onChange={numChange} />\n        </div>\n        <div>\n          <button type=\"submit\" onClick={btnClick}>add</button>\n        </div>\n    </form>\n  )\n}\n\nexport default PersonForm;","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObj) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObj)\n  return request.then(response => response.data)\n}\n\nconst toBeExported = { getAll, create, update, deletePerson }\n\nexport default toBeExported","const Notification = ({ notif }) => {\n  if (notif === null) {\n    return null\n  }\n  console.log(notif.type, notif.text)\n\n  return (\n    <div className={notif.type}>\n      {notif.text}\n    </div>\n  )\n}\n\nexport default Notification;","import React, { useState, useEffect } from 'react'\nimport Filter from './components/filter'\nimport Person from './components/person'\nimport PersonForm from './components/personform'\nimport server from './components/server'\nimport Notification from './components/notifications'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [newSearch, setSearch] = useState('');\n  const [ newName, setNewName ] = useState('');\n  const [ newNum, setNewNum ] = useState('');\n  const [ showAll, setShowAll ] = useState(true);\n  const [ notifMsg, setNotifMsg ] = useState(null);\n\n  useEffect(() => {\n    server.getAll()\n    .then(initialContacts => {\n      const people = initialContacts\n      setPersons(people)\n    })\n  }, [])\n\n  const setNotifMsgInfo = (text, type=\"success\") => {\n    setNotifMsg({ text, type })\n    setTimeout(() => {\n      setNotifMsg(null)\n    }, 5000)\n  }\n\n  const handleSearchInputChange = (e) => {\n    setShowAll(false);\n    setSearch(e.target.value);\n  }\n\n  const toShow = showAll \n  ? persons \n  : persons.filter(person => person.name.toLowerCase().includes(newSearch))\n\n  const handleNameInputChange = (e) => {\n    setNewName(e.target.value);\n  }\n\n  const handleNumInputChange = (e) => {\n    setNewNum(e.target.value);\n  }\n\n  const emptyField = (name, number) => {\n    return name === '' || number === ''\n  }\n\n  const checkDuplicate = (name) => {\n    const existingPersons = persons.find(person => person.name === name)\n    if (existingPersons) {\n      return existingPersons.id\n    } else {\n      return false\n    }\n  }\n\n  const updateNum = (person, existingId) => {\n    if (window.confirm(`${person.name} is already in this phonebook, replace with new number?`)) {\n      server.update(existingId, person)\n        .then(returnedPerson => {\n          setPersons(persons.map(person => person.id !== existingId ? person : returnedPerson))\n          setNotifMsgInfo(`Updated ${person.name}'s number to ${person.number}`)\n        })\n    }\n  }\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    const person = {name: newName, number: newNum}\n    const existingId = checkDuplicate(person.name)\n    if (existingId) {\n      updateNum(person, existingId)\n      return\n    }\n    if (emptyField(person.name, person.number)) {\n      setNotifMsgInfo(`Field is empty!`, 'error')\n      return\n    }\n    setPersons(persons.concat(person))\n    server.create(person)\n      .then(returnedContact => {\n        setPersons(persons.concat(returnedContact))\n        setNotifMsgInfo(`Added ${person.name} to the phonebook`)\n      })\n  }\n\n  const toggleDeletePerson = id => {\n    if (window.confirm('Do you really want to delete?')) {\n      const personToDelete = persons.find(person => person.id === id)\n      server.deletePerson(id)\n        .then(deletedContact => {\n          setNotifMsgInfo(`${personToDelete.name} has been deleted from the phonebook`)\n          setPersons(persons.filter(person => person.id !== id))\n      })\n        .catch(error => {\n          setNotifMsgInfo(`${personToDelete.name} has already been deleted`, 'error')\n          setPersons(persons.filter(person => person.id !== id))\n      })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notif={notifMsg} />\n      <Filter searchChange={handleSearchInputChange} />\n      <h3>Add a new</h3>\n      <PersonForm \n        nameChange={handleNameInputChange}\n        numChange={handleNumInputChange}\n        btnClick={handleClick}\n      />\n      <h3>Numbers</h3>\n      <div>\n        {toShow.map(person => {\n          return (\n            <div key={person.id}>\n              <Person \n                name={person.name}\n                number={person.number}\n                toggleDelete={() => toggleDeletePerson(person.id)}\n              />\n            </div>\n          )\n          })}\n      </div>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}